/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/v1/github-auth/complete": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Handle code from the GitHub authorization page */
		get: operations["v1-github-auth-complete"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/v1/github-auth/redirect": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Redirect to the GitHub authotization page */
		get: operations["v1-github-auth-redirect"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/v1/profile": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** Get current user profile */
		get: operations["v1-profile"];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: {
		ErrorDetail: {
			/** @description Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id' */
			location?: string;
			/** @description Error message text */
			message?: string;
			/** @description The value at the given location */
			value?: unknown;
		};
		ErrorModel: {
			/**
			 * Format: uri
			 * @description A URL to the JSON Schema for this object.
			 */
			readonly $schema?: string;
			/** @description A human-readable explanation specific to this occurrence of the problem. */
			detail?: string;
			/** @description Optional list of individual error details */
			errors?: components["schemas"]["ErrorDetail"][] | null;
			/**
			 * Format: uri
			 * @description A URI reference that identifies the specific occurrence of the problem.
			 */
			instance?: string;
			/**
			 * Format: int64
			 * @description HTTP status code
			 */
			status?: number;
			/** @description A short, human-readable summary of the problem type. This value should not change between occurrences of the error. */
			title?: string;
			/**
			 * Format: uri
			 * @description A URI reference to human-readable documentation for the error.
			 * @default about:blank
			 */
			type: string;
		};
		User: {
			/**
			 * Format: uri
			 * @description A URL to the JSON Schema for this object.
			 */
			readonly $schema?: string;
			/** @description User avatar URL */
			avatar_url?: string;
			/** Format: date-time */
			created_at?: string;
			/** @description User email */
			email?: string;
			/** @description User username in GitHub */
			github_username?: string;
			/**
			 * Format: int64
			 * @description User unique identifier
			 */
			id?: number;
			/** @description User name */
			name?: string;
			/** @description User timezone */
			timezone?: string;
			/** Format: date-time */
			updated_at?: string;
			/** @description User username */
			username?: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
	"v1-github-auth-complete": {
		parameters: {
			query: {
				back?: string;
				code: string;
			};
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description No Content */
			204: {
				headers: {
					Location?: string;
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Error */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/problem+json": components["schemas"]["ErrorModel"];
				};
			};
		};
	};
	"v1-github-auth-redirect": {
		parameters: {
			query?: {
				back?: string;
			};
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description No Content */
			204: {
				headers: {
					Location?: string;
					[name: string]: unknown;
				};
				content?: never;
			};
			/** @description Error */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/problem+json": components["schemas"]["ErrorModel"];
				};
			};
		};
	};
	"v1-profile": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description OK */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/json": components["schemas"]["User"];
				};
			};
			/** @description Error */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					"application/problem+json": components["schemas"]["ErrorModel"];
				};
			};
		};
	};
}
